---
- name: Full Ubuntu System Hardening and Patching
  hosts: all
  become: yes
  vars:
    new_user: admin
    ssh_key_path: "{{ ansible_env.HOME }}/.ssh/id_rsa.pub"  # Correct path to your public key
    allowed_networks:
      - 192.168.56.0/24
    unnecessary_packages:
      - telnet
      - rsh-client
      - talk
    unnecessary_services:
      - avahi-daemon
      - cups
    ssh_port: 22

  pre_tasks:
    - name: Load public SSH key from file
      set_fact:
        ssh_pubkey: "{{ lookup('file', ssh_key_path) }}"

  tasks:
    - name: Perform full system patching
      apt:
        update_cache: yes
        upgrade: dist
        autoremove: yes
        autoclean: yes
      notify: reload SSH

    - name: Ensure admin group exists
      group:
        name: admin
        state: present

    - name: Create local admin user
      user:
        name: "{{ new_user }}"
        groups: "sudo,admin"
        shell: /bin/bash
        state: present
        create_home: yes

    - name: Add SSH public key for local user
      authorized_key:
        user: "{{ new_user }}"
        key: "{{ ssh_pubkey }}"
        state: present

    - name: Add sudoer rule for local user
      copy:
        dest: "/etc/sudoers.d/{{ new_user }}"
        content: "{{ new_user }} ALL=(ALL) NOPASSWD:ALL"
        mode: '0440'

    - name: Harden SSH configuration
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
        backup: yes
      loop:
        - { regexp: '^#?PermitRootLogin',       line: 'PermitRootLogin no' }
        - { regexp: '^#?PasswordAuthentication', line: 'PasswordAuthentication no' }
        - { regexp: '^#?Port',                   line: 'Port {{ ssh_port }}' }
        - { regexp: '^#?UseDNS',                 line: 'UseDNS no' }
      notify: reload SSH

    - name: Ensure firewalld is installed
      apt:
        name: firewalld
        state: present

    - name: Enable firewalld and start it
      service:
        name: firewalld
        state: started
        enabled: yes

    - name: Add SSH port to internal zone
      firewalld:
        service: ssh
        zone: internal
        permanent: yes
        state: enabled
        immediate: yes

    - name: Add permitted networks to internal zone
      firewalld:
        source: "{{ item }}"
        zone: internal
        permanent: yes
        state: enabled
        immediate: yes
      loop: "{{ allowed_networks }}"

    - name: Drop SSH from public zone
      firewalld:
        service: ssh
        zone: public
        permanent: yes
        state: disabled
        immediate: yes

    - name: Remove undesirable packages
      apt:
        name: "{{ item }}"
        state: absent
      loop: "{{ unnecessary_packages }}"

    - name: Stop and disable unnecessary services
      service:
        name: "{{ item }}"
        state: stopped
        enabled: no
      loop: "{{ unnecessary_services }}"
      ignore_errors: yes

    - name: Set message of the day (MOTD)
      copy:
        dest: /etc/motd
        content: |
          Authorized access only. All activity may be monitored.

    - name: Set login banner (/etc/issue)
      copy:
        dest: /etc/issue
        content: |
          WARNING: This system is for authorized users only.

    - name: Set pre-login banner (/etc/issue.net)
      copy:
        dest: /etc/issue.net
        content: |
          Unauthorized access is prohibited. Disconnect now if not authorized.

  handlers:
    - name: reload SSH
      service:
        name: ssh
        state: reloaded
